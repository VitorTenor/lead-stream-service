# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.23.4'

    - name: Set environment variable
      run: echo "ENVIRONMENT=TEST" >> $GITHUB_ENV

    - name: Download dependencies
      run: go mod download

    - name: Build
      run: go build -v ./cmd/main.go

    - name: Test
      run: chmod +x ./cmd/run_tests.sh && ./cmd/run_tests.sh

    - name: Upload Go test results
      uses: actions/upload-artifact@v4
      with:
        name: Go-results-${{ matrix.go-version }}
        path: test_results.json

  codeql-analysis:
      name: Analyze code with CodeQL
      runs-on: ubuntu-latest
      timeout-minutes: 360
      permissions:
        security-events: write
        actions: read
        contents: read

      strategy:
        fail-fast: false
        matrix:
          language: [ go ]
          build-mode: [ none ]

      steps:
        - name: Checkout repository
          uses: actions/checkout@v4

        - name: Set up Go
          uses: actions/setup-go@v4
          with:
            go-version: '1.23.4'

        - name: Initialize CodeQL
          uses: github/codeql-action/init@v3
          with:
            languages: ${{ matrix.language }}
            build-mode: ${{ matrix.build-mode }}

        - if: matrix.build-mode == 'manual'
          run: |
            echo 'If you are using a "manual" build mode for one or more of the' \
              'languages you are analyzing, replace this with the commands to build' \
              'your code, for example:'
            echo '  make bootstrap'
            echo '  make release'
            exit 1

        - name: Perform CodeQL Analysis
          uses: github/codeql-action/analyze@v3
          with:
            category: "/language:${{matrix.language}}"