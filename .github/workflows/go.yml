---
# This workflow will build a golang project
# For more information see:
# BUILD:
# https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go
# LINTER:
# https://github.com/github/super-linter

name: Go

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23'

      - name: Cache Go Modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Set environment variable
        run: echo "ENVIRONMENT=TEST" >> "$GITHUB_ENV"

      - name: Download dependencies
        run: go mod download

      - name: Build
        run: go build -v ./cmd/main.go

      - name: Test
        run: chmod +x ./cmd/run_tests.sh && ./cmd/run_tests.sh

      - name: Upload Go test results
        uses: actions/upload-artifact@v4
        with:
          name: Go-results
          path: test_results.json

  run-lint:
    name: Run Linter
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Lint Code Base
        uses: github/super-linter@v4
        env:
          VALIDATE_ALL_CODEBASE: true
          DEFAULT_BRANCH: "main"
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
          FILTER_REGEX_EXCLUDE: ".*_test.go"